apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

def keystorePropertiesFile = rootProject.file("keystore.properties")

def keystoreProperties = new Properties()

keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    def getVersionName = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        String[] temp = stdout.toString().trim().split("-")
        if (temp.length == 1)
            return temp[0] + ".0"
        return temp[0] + "." + temp[1]
    }
    def getCommitsCount = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count'
            standardOutput = stdout
        }
        return stdout.toString().trim().toInteger()
    }

    signingConfigs {
        signingConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.probook455.telephone"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode getCommitsCount()
        versionName getVersionName()
        setProperty("archivesBaseName", "$applicationId-$versionName")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signingConfig
        }
    }
    flavorDimensions "version"
    productFlavors {
        full {
            dimension "version"
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
            manifestPlaceholders.screenOrientation = "portrait"
        }
        dev {
            dimension "version"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            manifestPlaceholders.screenOrientation = "unspecified"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0-alpha1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1-beta01'

    def nav_version = "1.0.0-alpha08"
    implementation "android.arch.navigation:navigation-fragment:$nav_version"
    implementation "android.arch.navigation:navigation-ui:$nav_version"
    androidTestImplementation "android.arch.navigation:navigation-testing:$nav_version"
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.firebase:firebase-auth:16.1.0'
}
